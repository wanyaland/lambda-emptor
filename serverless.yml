
service: lambda-emptor 

package:
  exclude:
    - node_modules/**
    - .git/**
    - __pycache__/**

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: us-east-2
  deploymentBucket: emptor-title
  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - "s3:*"
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - lambda:InvokeFunction
      Resource: 
        - "arn:aws:s3:::emptor-title/*"
        - "Fn::GetAtt": [ TitlesTable, Arn ]
        - "*"
  


  apiKeys: 
    - user-key-${opt:stage, 'dev'}


custom:
  tableName: titles-${self:provider.stage}
  urlTable: url-table-${self:provider.stage}

  
plugins:
  - serverless-python-requirements

functions:
  create_identifier:
    handler: handler.create_identifier
    environment:
       URL_TABLE: ${self:custom.urlTable}
       BUCKET: ${self:provider.deploymentBucket}
    events:
      - http:
          path: page/title
          method: post
          
  extracts_title:
    handler: handler.extracts_title

resources:
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}

